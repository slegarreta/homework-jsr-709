{"ast":null,"code":"import _classCallCheck from \"/Users/sam/Downloads/14_starter_code/3_practice_create_read/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sam/Downloads/14_starter_code/3_practice_create_read/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sam/Downloads/14_starter_code/3_practice_create_read/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sam/Downloads/14_starter_code/3_practice_create_read/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sam/Downloads/14_starter_code/3_practice_create_read/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sam/Downloads/14_starter_code/3_practice_create_read/src/App.js\";\nimport React from 'react'; // Import statements for components\n\nimport firebase from 'firebase';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      items: [],\n      value: ''\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        value: e.target.value\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.state.toDoListTable.push({\n        title: _this.state.value\n      });\n\n      _this.setState({\n        value: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // 1. firebase config file! we need to add this to get firebase to connect!\n      var firebaseConfig = {\n        apiKey: \"AIzaSyCOOIkRvriEIa6So1s14IRVeyktCitJE4Y\",\n        authDomain: \"jsr-709-sam-hw.firebaseapp.com\",\n        databaseURL: \"https://jsr-709-sam-hw.firebaseio.com\",\n        projectId: \"jsr-709-sam-hw\",\n        storageBucket: \"\",\n        messagingSenderId: \"385424267069\",\n        appId: \"1:385424267069:web:356b4def5d4c8f84\"\n      }; // 2. Initialize Firebase Instance\n\n      firebase.initializeApp(firebaseConfig); // 3. Make a connection to the database portion of the firebase instance\n\n      var database = firebase.database(); // 3. Find the specific table we are looking for and make a connection to it\n\n      var toDoListTable = database.ref('todolist');\n      this.setState({\n        toDoListTable: toDoListTable\n      }); // 4. Create a .on('value') event listener for this data base\n      //This is a firebase method that listens for when a value on a table changes!\n      // This method is triggered once when the listener is attached and again every time the data, including children, changes.\n      // a. call the .val() method on the response\n      // b. loop over all of the items in the returned object and turn them into an array\n      // d. use setState to add the data to the state.\n\n      toDoListTable.on('value', function (response) {\n        var toDoListData = response.val();\n        var toDoListArray = [];\n\n        for (var item in toDoListData) {\n          toDoListArray.push(toDoListData[item]);\n        }\n\n        _this2.setState({\n          items: toDoListArray\n        });\n      });\n    } // 8. Create an handeChange event listener to handle the input from an input!\n\n  }, {\n    key: \"render\",\n    // 9. Create an handleClick event listener to handle the click of a button\n    // This function should take the data, turn into a data structure that matches the rest of your list\n    // ie. maybe an object with a key title\n    // Use the .push method of firebase to add the record to the firebase table\n    value: function render() {\n      var listItems = this.state.items.map(function (item, index) {\n        return React.createElement(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, (item.title, index));\n      }); //5. Loop over all of the to do list items now living in state from firebase!\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"bg-light m-3 p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"To Do List\")), React.createElement(\"div\", {\n        className: \"col-12 m-3 p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \" Add Item \")), React.createElement(\"div\", {\n        className: \"col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, listItems))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/sam/Downloads/14_starter_code/3_practice_create_read/src/App.js"],"names":["React","firebase","App","state","items","value","handleChange","e","setState","target","handleClick","toDoListTable","push","title","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","database","ref","on","response","toDoListData","val","toDoListArray","item","listItems","map","index","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n// Import statements for components\nimport firebase from 'firebase';\n\nexport default class App extends React.Component {\n\tstate = {\n\t\titems: [],\n\t\tvalue: ''\n\t};\n\tcomponentDidMount() {\n\t\t// 1. firebase config file! we need to add this to get firebase to connect!\n\t\tvar firebaseConfig = {\n    apiKey: \"AIzaSyCOOIkRvriEIa6So1s14IRVeyktCitJE4Y\",\n    authDomain: \"jsr-709-sam-hw.firebaseapp.com\",\n    databaseURL: \"https://jsr-709-sam-hw.firebaseio.com\",\n    projectId: \"jsr-709-sam-hw\",\n    storageBucket: \"\",\n    messagingSenderId: \"385424267069\",\n    appId: \"1:385424267069:web:356b4def5d4c8f84\"\n  };\n\t\t// 2. Initialize Firebase Instance\n\t\tfirebase.initializeApp(firebaseConfig);\n\t\t// 3. Make a connection to the database portion of the firebase instance\n\t\tlet database = firebase.database();\n\t\t// 3. Find the specific table we are looking for and make a connection to it\n\t\tlet toDoListTable = database.ref('todolist');\n\n\t\tthis.setState({\n\t\t\ttoDoListTable: toDoListTable\n\t\t})\n\t\t// 4. Create a .on('value') event listener for this data base\n\t\t//This is a firebase method that listens for when a value on a table changes!\n\t\t// This method is triggered once when the listener is attached and again every time the data, including children, changes.\n\t\t// a. call the .val() method on the response\n\t\t// b. loop over all of the items in the returned object and turn them into an array\n\t\t// d. use setState to add the data to the state.\n\t\ttoDoListTable.on('value', (response) => {\n\t\t\tlet toDoListData = response.val();\n\t\t\tlet toDoListArray = [];\n\n\t\t\tfor (let item in toDoListData) {\n\t\t\t\ttoDoListArray.push(toDoListData[item])\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\titems: toDoListArray\n\t\t\t})\n\t\t})\n\n\t}\n\n\t// 8. Create an handeChange event listener to handle the input from an input!\n\n\thandleChange = (e) => {\n\tthis.setState({\n\t\tvalue: e.target.value\n\t\t})\n\t}\n\n\thandleClick = () => {\n\t\tthis.state.toDoListTable.push({\n\t\t\ttitle: this.state.value\n\t\t})\n\n\t\tthis.setState({\n\t\t\tvalue: ''\n\t\t})\n\t}\n\n\t// 9. Create an handleClick event listener to handle the click of a button\n\t// This function should take the data, turn into a data structure that matches the rest of your list\n\t// ie. maybe an object with a key title\n\t// Use the .push method of firebase to add the record to the firebase table\n\n\trender() {\n\t\tlet listItems = this.state.items.map((item, index) => {\n\t\t\treturn <li className=\"list-group-item\">{item.title, index}</li>\n\t\t})\n\t\t//5. Loop over all of the to do list items now living in state from firebase!\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t\t<div className=\"col-8\">\n\t\t\t\t\t\t<h1 className=\"bg-light m-3 p-3\">To Do List</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-12 m-3 p-3\">\n\t\t\t\t\t\t<input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.handleClick}> Add Item </button>\n\t\t\t\t\t\t\t{/* 7. Create an input and a button to handle adding new data to firebase */}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-4\">\n\t\t\t\t\t\t<ol className=\"list-group\">\n\t\t\t\t\t\t\t\t{/* 6. Add the variable that holds all of the to do list items here! */}\n\t\t\t\t\t\t\t{listItems}\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}